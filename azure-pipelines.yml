# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- automated-testing

pool:
  vmImage: windows-2019
  # What will we be using?


variables:
  buildConfiguration: 'Release'

steps:
- task: Bash@3
  displayName: Install .NET Aspire workload
  inputs:
    targetType: 'inline'
    script: dotnet workload install aspire

- script: ls -la
  displayName: "list files"
  workingDirectory: 'src'

- script: dotnet build --configuration $(buildConfiguration)
  displayName: 'dotnet build $(buildConfiguration)'
  workingDirectory: 'src'

- task: DotNetCoreCLI@2
  displayName: "Run Unit Tests"
  inputs:
    command: 'test'
    workingDirectory: 'src/FancyToDo.UnitTests'

- task: PowerShell@2
  displayName: "Start CosmosDB Emulator"
  inputs:
    targetType: 'inline'
    script: |
      # Write your PowerShell commands here.
      
      dir "$env:ProgramFiles\Azure Cosmos DB Emulator\"
      
      Import-Module "$env:ProgramFiles\Azure Cosmos DB Emulator\PSModules\Microsoft.Azure.CosmosDB.Emulator"
      
      $startEmulatorCmd = "Start-CosmosDbEmulator -NoFirewall -NoUI"
      Write-Host $startEmulatorCmd
      Invoke-Expression -Command $startEmulatorCmd
      
      # Pipe an emulator info object to the output stream
      
      $Emulator = Get-Item "$env:ProgramFiles\Azure Cosmos DB Emulator\Microsoft.Azure.Cosmos.Emulator.exe"
      $IPAddress = Get-NetIPAddress -AddressFamily IPV4 -AddressState Preferred -PrefixOrigin Manual | Select-Object IPAddress
      
      New-Object PSObject @{
      Emulator = $Emulator.BaseName
      Version = $Emulator.VersionInfo.ProductVersion
      Endpoint = @($(hostname), $IPAddress.IPAddress) | ForEach-Object { "https://${_}:8081/" }
      MongoDBEndpoint = @($(hostname), $IPAddress.IPAddress) | ForEach-Object { "mongodb://${_}:10255/" }
      CassandraEndpoint = @($(hostname), $IPAddress.IPAddress) | ForEach-Object { "tcp://${_}:10350/" }
      GremlinEndpoint = @($(hostname), $IPAddress.IPAddress) | ForEach-Object { "http://${_}:8901/" }
      TableEndpoint = @($(hostname), $IPAddress.IPAddress) | ForEach-Object { "https://${_}:8902/" }
      IPAddress = $IPAddress.IPAddress
      }

- task: DotNetCoreCLI@2
  displayName: "Run Integration Tests"
  inputs:
    command: 'test'
    workingDirectory: 'src/FancyToDo.IntegrationTests'

- task: FileTransform@2
  inputs:
    folderPath: 'src/FancyToDo.FunctionalTests'
    enableXmlTransform: false
    jsonTargetFiles: '''appsettings.json'''

- task: DotNetCoreCLI@2
  displayName: "Run Functional Tests"
  inputs:
    command: 'test'
    workingDirectory: 'src/FancyToDo.FunctionalTests'
