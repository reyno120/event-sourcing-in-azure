# ASP.NET Core\
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core



trigger:
- automated-testing

pool:
  vmImage: ubuntu-latest
  # What will we be using?


variables:
  buildConfiguration: 'Release'

steps:
- task: TerraformInstaller@1
  inputs:
    terraformVersion: 'latest'

- task: TerraformTaskV4@4
  inputs:
    provider: 'azurerm'
    command: 'custom'
    outputTo: 'console'
    customCommand: 'workspace select testing'
    environmentServiceNameAzureRM: 'azrm'

- task: TerraformTaskV4@4
  inputs:
    provider: 'azurerm'
    command: 'init'
    backendServiceArm: 'azrm'
    backendAzureRmResourceGroupName: 'automated-testing'
    backendAzureRmStorageAccountName: 'jmreynolds03storage'
    backendAzureRmContainerName: 'terraform-state'
    backendAzureRmKey: 'terraform.tfstate'

- task: TerraformTaskV4@4
  inputs:
    provider: 'azurerm'
    command: 'validate'
    
- task: TerraformTaskV4@4
  inputs:
    provider: 'azurerm'
    command: 'apply'
    commandOptions: --auto-approve
    environmentServiceNameAzureRM: 'azrm'

- task: Bash@3
  displayName: Install .NET Aspire workload
  inputs:
    targetType: 'inline'
    script: dotnet workload install aspire

- script: ls -la
  displayName: "list files"
  workingDirectory: 'src'

- script: dotnet build --configuration $(buildConfiguration)
  displayName: 'dotnet build $(buildConfiguration)'
  workingDirectory: 'src'

- task: DotNetCoreCLI@2
  displayName: "Run Unit Tests"
  inputs:
    command: 'test'
    workingDirectory: 'src/FancyToDo.UnitTests'


- task: DotNetCoreCLI@2
  displayName: "Run Integration Tests"
  inputs:
    command: 'test'
    workingDirectory: 'src/FancyToDo.IntegrationTests'

- task: FileTransform@2
  inputs:
    folderPath: 'src/FancyToDo.FunctionalTests'
    enableXmlTransform: false
    jsonTargetFiles: '''appsettings.json'''

- task: DotNetCoreCLI@2
  displayName: "Run Functional Tests"
  inputs:
    command: 'test'
    workingDirectory: 'src/FancyToDo.FunctionalTests'
